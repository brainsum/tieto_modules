<?php

/**
 * @file
 * Module file.
 */

/**
 * Implements hook_preprocess_HOOK().
 */
function tieto_general_ui_preprocess_html(&$variables) {
  /** @var \Drupal\Core\Routing\RouteMatchInterface $routeMatch */
  $routeMatch = \Drupal::routeMatch();
  $routeName = $routeMatch->getRouteName();

  switch ($routeName) {
    case 'entity.node.edit_form':
      $variables['attributes']['class'][] = 'node--edit';
      break;

    case 'node.add':
      $variables['attributes']['class'][] = 'node--add';
      break;

    case 'node_clone.prepopulate_node':
      $variables['attributes']['class'][] = 'node--clone';
      break;
  }
}

/**
 * Implements hook_library_info_build().
 */
function tieto_general_ui_library_info_build() {
  $libraries = [];

  $request = \Drupal::request();
  $host = $request->getHost();

  $libraryPrefix = (\strpos($host, 'demo-') === FALSE) ? '' : 'demo';
  $libraries['tieto_intra_topbar'] = _tieto_general_ui_create_toolbar_library($libraryPrefix);

  return $libraries;
}

/**
 * Generate a library definition array.
 *
 * @param string $prefix
 *   A prefix for the URL.
 *
 * @return array
 *   The library definition.
 */
function _tieto_general_ui_create_toolbar_library(string $prefix = ''): array {
  $url = '//' . ($prefix ? "$prefix-" : '') . 'topbar.intra.tieto.com/include.js';

  return [
    'version' => 2.1,
    'js' => [
      $url => [
        'type' => 'external',
        'attributes' => [
          'id' => 'tieto-top-menu',
          'theme' => 'light',
          'parent' => '#header-wrapper',
          'position' => 'relative',
        ],
      ],
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK().
 */
function tieto_general_ui_preprocess_page(&$variables) {
  $variables['#attached']['library'][] = 'tieto_general_ui/tieto_intra_topbar';
}
